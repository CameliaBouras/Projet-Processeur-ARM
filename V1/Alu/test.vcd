$date
  Sun Oct 22 16:40:45 2023
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$var reg 32 ! op1[31:0] $end
$var reg 32 " op2[31:0] $end
$var reg 32 # res[31:0] $end
$var reg 1 $ cin $end
$var reg 1 % cout $end
$var reg 1 & z $end
$var reg 1 ' n $end
$var reg 1 ( v $end
$var reg 2 ) cmd[1:0] $end
$var reg 1 * vdd $end
$var reg 1 + vss $end
$scope module alu $end
$var reg 32 , op1[31:0] $end
$var reg 32 - op2[31:0] $end
$var reg 1 . cin $end
$var reg 2 / cmd[1:0] $end
$var reg 32 0 res[31:0] $end
$var reg 1 1 cout $end
$var reg 1 2 z $end
$var reg 1 3 n $end
$var reg 1 4 v $end
$var reg 1 5 vdd $end
$var reg 1 6 vss $end
$var reg 33 7 temp[32:0] $end
$var reg 1 8 cond_v $end
$upscope $end
$enddefinitions $end
#0
b11110000111100001111000011110000 !
b01001111010010111000111000101011 "
b01000000001111000111111100011011 #
0$
1%
0&
0'
0(
b00 )
0*
0+
b11110000111100001111000011110000 ,
b01001111010010111000111000101011 -
0.
b00 /
b01000000001111000111111100011011 0
11
02
03
04
05
06
b101000000001111000111111100011011 7
08
#10000000
b01000000001111000111111100011100 #
1$
1.
b01000000001111000111111100011100 0
b101000000001111000111111100011100 7
#20000000
b01000000010000001000000000100000 #
b01 )
b01 /
b01000000010000001000000000100000 0
#40000000
b11111111111110111111111011111011 #
b10 )
b10 /
b11111111111110111111111011111011 0
#60000000
b10111111101110110111111011011011 #
b11 )
b11 /
b10111111101110110111111011011011 0
#80000000
b01000000001111000111111100011100 #
b00 )
b00 /
b01000000001111000111111100011100 0
